30/05 19:56:28 535: initializing environment...
30/05 19:56:28 554: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\control.py
30/05 19:56:28 561: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\EVOPROG_dummyInjector.py
30/05 19:56:28 568: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\extractor.py
30/05 19:56:28 575: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\injector.py
30/05 19:56:28 583: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\light.py
30/05 19:56:28 589: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\mixer.py
30/05 19:56:28 594: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\odsensor.py
30/05 19:56:28 600: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\temperature.py
30/05 19:56:28 606: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_continuousPump.py
30/05 19:56:28 612: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_discretePump.py
30/05 19:56:28 617: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_dummyInjector.py
30/05 19:56:28 624: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_light.py
30/05 19:56:28 630: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_mixer.py
30/05 19:56:28 636: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_odsensor.py
30/05 19:56:28 641: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_sixwayvalve.py
30/05 19:56:28 652: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_temperature.py
30/05 19:56:28 659: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\test.py
30/05 19:56:28 666: adding path: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG
30/05 19:56:28 670: importing file: EVOPROG_continuousPump
30/05 19:56:28 672: making new var name...
30/05 19:56:28 680: creating new var on the environment...
30/05 19:56:28 682: getting variable var0 from the main_namespace...
30/05 19:56:28 684: importing file: EVOPROG_discretePump
30/05 19:56:28 686: making new var name...
30/05 19:56:28 688: creating new var on the environment...
30/05 19:56:28 689: getting variable var1 from the main_namespace...
30/05 19:56:28 698: making new var name...
30/05 19:56:28 699: creating new var on the environment...
30/05 19:56:28 701: getting variable var2 from the main_namespace...
30/05 19:56:28 703: importing file: EVOPROG_sixwayvalve
30/05 19:56:28 706: making new var name...
30/05 19:56:28 708: creating new var on the environment...
30/05 19:56:28 714: getting variable var3 from the main_namespace...
30/05 19:56:28 716: getting variable var3 from the main_namespace...
30/05 19:56:28 732: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:28 737: executing: epsilon = 0.1
30/05 19:56:28 739: executing: threshold = 600
30/05 19:56:28 741: executing: rate = 2
30/05 19:56:28 742: sketching loadContainer(1, 1000)
30/05 19:56:28 743: sketching loadContainer(2, 1000)
30/05 19:56:28 745: sketching loadContainer(3, 1000)
30/05 19:56:28 746: executing loop: actualTime < 20000
30/05 19:56:28 747: sketching measureOD(2)
30/05 19:56:28 749: execute: normOD > 1
30/05 19:56:28 750: execute: normOD < 1
30/05 19:56:28 751: executing: prop = 1 + normOD - 1
30/05 19:56:28 756: executing: prop = 1 - normOD - 1
30/05 19:56:28 767: executing: prop = 1
30/05 19:56:28 768: execute: fabs(prop - 1) > epsilon
30/05 19:56:28 770: executing: rate = prop * rate
30/05 19:56:28 771: sketching setContinousFlow(1, 2, 2)
30/05 19:56:28 773: sketching setContinousFlow(2, 3, 2)
30/05 19:56:28 778: sketching timeStept
30/05 19:56:28 779: time variable: 1
30/05 19:56:28 782: executing: epsilon = 0.1
30/05 19:56:28 783: adding 1 neighbors...
30/05 19:56:28 784: executing: threshold = 600
30/05 19:56:28 785: adding 1 neighbors...
30/05 19:56:28 786: executing: rate = 2
30/05 19:56:28 796: adding 1 neighbors...
30/05 19:56:28 798: exec loadContainer(1, 1000)
30/05 19:56:28 802: adding 1 neighbors...
30/05 19:56:28 806: exec loadContainer(2, 1000)
30/05 19:56:28 808: adding 1 neighbors...
30/05 19:56:28 810: exec loadContainer(3, 1000)
30/05 19:56:28 811: adding 1 neighbors...
30/05 19:56:28 813: executing loop: actualTime < 20000
30/05 19:56:28 816: adding 1 neighbors...
30/05 19:56:28 818: importing file: EVOPROG_odsensor
30/05 19:56:28 822: making new var name...
30/05 19:56:28 824: creating new var on the environment...
30/05 19:56:28 826: getting variable var4 from the main_namespace...
30/05 19:56:28 879: exec measureOD(2) = 0
30/05 19:56:28 880: adding 1 neighbors...
30/05 19:56:28 882: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:28 884: adding 1 neighbors...
30/05 19:56:28 886: execute: normOD > 1
30/05 19:56:28 888: adding 2 neighbors...
30/05 19:56:28 889: execute: normOD < 1
30/05 19:56:28 890: adding 2 neighbors...
30/05 19:56:28 894: executing: prop = 1 - normOD - 1
30/05 19:56:28 896: adding 1 neighbors...
30/05 19:56:28 897: execute: fabs(prop - 1) > epsilon
30/05 19:56:28 898: adding 2 neighbors...
30/05 19:56:28 899: executing: rate = prop * rate
30/05 19:56:28 901: adding 1 neighbors...
30/05 19:56:28 902: exec setContinousFlow(1, 2, 4)
30/05 19:56:28 904: getting variable var3 from the main_namespace...
30/05 19:56:28 916: getting variable var0 from the main_namespace...
30/05 19:56:28 969: adding path: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins
30/05 19:56:28 973: importing file: EVOPROG_dummyInjector
30/05 19:56:28 976: making new var name...
30/05 19:56:28 977: creating new var on the environment...
30/05 19:56:28 978: getting variable var5 from the main_namespace...
30/05 19:56:28 980: adding 1 neighbors...
30/05 19:56:28 982: exec setContinousFlow(2, 3, 4)
30/05 19:56:28 984: getting variable var2 from the main_namespace...
30/05 19:56:29 037: getting variable var5 from the main_namespace...
30/05 19:56:29 039: adding 1 neighbors...
30/05 19:56:29 056: time variable: 1000
30/05 19:56:29 057: adding 1 neighbors...
30/05 19:56:29 058: executing loop: actualTime < 20000
30/05 19:56:29 060: adding 1 neighbors...
30/05 19:56:29 061: getting variable var4 from the main_namespace...
30/05 19:56:29 112: exec measureOD(2) = 50
30/05 19:56:29 114: adding 1 neighbors...
30/05 19:56:29 116: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:29 118: adding 1 neighbors...
30/05 19:56:29 120: execute: normOD > 1
30/05 19:56:29 122: adding 2 neighbors...
30/05 19:56:29 126: execute: normOD < 1
30/05 19:56:29 127: adding 2 neighbors...
30/05 19:56:29 129: executing: prop = 1 - normOD - 1
30/05 19:56:29 130: adding 1 neighbors...
30/05 19:56:29 131: execute: fabs(prop - 1) > epsilon
30/05 19:56:29 132: adding 2 neighbors...
30/05 19:56:29 133: executing: rate = prop * rate
30/05 19:56:29 135: adding 1 neighbors...
30/05 19:56:29 136: exec setContinousFlow(1, 2, 7.66667)
30/05 19:56:29 138: getting variable var3 from the main_namespace...
30/05 19:56:29 151: getting variable var0 from the main_namespace...
30/05 19:56:29 204: getting variable var5 from the main_namespace...
30/05 19:56:29 207: adding 1 neighbors...
30/05 19:56:29 209: exec setContinousFlow(2, 3, 7.66667)
30/05 19:56:29 210: getting variable var2 from the main_namespace...
30/05 19:56:29 262: getting variable var5 from the main_namespace...
30/05 19:56:29 264: adding 1 neighbors...
30/05 19:56:29 283: time variable: 2000
30/05 19:56:29 284: adding 1 neighbors...
30/05 19:56:29 285: executing loop: actualTime < 20000
30/05 19:56:29 288: adding 1 neighbors...
30/05 19:56:29 289: getting variable var4 from the main_namespace...
30/05 19:56:29 345: exec measureOD(2) = 100
30/05 19:56:29 347: adding 1 neighbors...
30/05 19:56:29 349: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:29 351: adding 1 neighbors...
30/05 19:56:29 353: execute: normOD > 1
30/05 19:56:29 355: adding 2 neighbors...
30/05 19:56:29 360: execute: normOD < 1
30/05 19:56:29 361: adding 2 neighbors...
30/05 19:56:29 362: executing: prop = 1 - normOD - 1
30/05 19:56:29 363: adding 1 neighbors...
30/05 19:56:29 364: execute: fabs(prop - 1) > epsilon
30/05 19:56:29 365: adding 2 neighbors...
30/05 19:56:29 367: executing: rate = prop * rate
30/05 19:56:29 368: adding 1 neighbors...
30/05 19:56:29 370: exec setContinousFlow(1, 2, 14.0556)
30/05 19:56:29 372: getting variable var3 from the main_namespace...
30/05 19:56:29 384: getting variable var0 from the main_namespace...
30/05 19:56:29 438: getting variable var5 from the main_namespace...
30/05 19:56:29 440: adding 1 neighbors...
30/05 19:56:29 442: exec setContinousFlow(2, 3, 14.0556)
30/05 19:56:29 444: getting variable var2 from the main_namespace...
30/05 19:56:29 496: getting variable var5 from the main_namespace...
30/05 19:56:29 498: adding 1 neighbors...
30/05 19:56:29 521: time variable: 3000
30/05 19:56:29 522: adding 1 neighbors...
30/05 19:56:29 523: executing loop: actualTime < 20000
30/05 19:56:29 525: adding 1 neighbors...
30/05 19:56:29 526: getting variable var4 from the main_namespace...
30/05 19:56:29 578: exec measureOD(2) = 150
30/05 19:56:29 579: adding 1 neighbors...
30/05 19:56:29 580: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:29 583: adding 1 neighbors...
30/05 19:56:29 584: execute: normOD > 1
30/05 19:56:29 585: adding 2 neighbors...
30/05 19:56:29 587: execute: normOD < 1
30/05 19:56:29 595: adding 2 neighbors...
30/05 19:56:29 597: executing: prop = 1 - normOD - 1
30/05 19:56:29 598: adding 1 neighbors...
30/05 19:56:29 600: execute: fabs(prop - 1) > epsilon
30/05 19:56:29 602: adding 2 neighbors...
30/05 19:56:29 604: executing: rate = prop * rate
30/05 19:56:29 606: adding 1 neighbors...
30/05 19:56:29 611: exec setContinousFlow(1, 2, 24.5972)
30/05 19:56:29 614: getting variable var3 from the main_namespace...
30/05 19:56:29 626: getting variable var0 from the main_namespace...
30/05 19:56:29 678: getting variable var5 from the main_namespace...
30/05 19:56:29 681: adding 1 neighbors...
30/05 19:56:29 682: exec setContinousFlow(2, 3, 24.5972)
30/05 19:56:29 684: getting variable var2 from the main_namespace...
30/05 19:56:29 737: getting variable var5 from the main_namespace...
30/05 19:56:29 740: adding 1 neighbors...
30/05 19:56:29 763: time variable: 4000
30/05 19:56:29 764: adding 1 neighbors...
30/05 19:56:29 765: executing loop: actualTime < 20000
30/05 19:56:29 767: adding 1 neighbors...
30/05 19:56:29 768: getting variable var4 from the main_namespace...
30/05 19:56:29 820: exec measureOD(2) = 200
30/05 19:56:29 822: adding 1 neighbors...
30/05 19:56:29 824: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:29 826: adding 1 neighbors...
30/05 19:56:29 827: execute: normOD > 1
30/05 19:56:29 829: adding 2 neighbors...
30/05 19:56:29 830: execute: normOD < 1
30/05 19:56:29 832: adding 2 neighbors...
30/05 19:56:29 833: executing: prop = 1 - normOD - 1
30/05 19:56:29 834: adding 1 neighbors...
30/05 19:56:29 835: execute: fabs(prop - 1) > epsilon
30/05 19:56:29 838: adding 2 neighbors...
30/05 19:56:29 839: executing: rate = prop * rate
30/05 19:56:29 840: adding 1 neighbors...
30/05 19:56:29 841: exec setContinousFlow(1, 2, 40.9954)
30/05 19:56:29 843: getting variable var3 from the main_namespace...
30/05 19:56:29 854: getting variable var0 from the main_namespace...
30/05 19:56:29 907: getting variable var5 from the main_namespace...
30/05 19:56:29 910: adding 1 neighbors...
30/05 19:56:29 911: exec setContinousFlow(2, 3, 40.9954)
30/05 19:56:29 913: getting variable var2 from the main_namespace...
30/05 19:56:29 966: getting variable var5 from the main_namespace...
30/05 19:56:29 969: adding 1 neighbors...
30/05 19:56:29 990: time variable: 5000
30/05 19:56:29 991: adding 1 neighbors...
30/05 19:56:29 993: executing loop: actualTime < 20000
30/05 19:56:29 994: adding 1 neighbors...
30/05 19:56:29 995: getting variable var4 from the main_namespace...
30/05 19:56:30 048: exec measureOD(2) = 250
30/05 19:56:30 051: adding 1 neighbors...
30/05 19:56:30 052: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:30 055: adding 1 neighbors...
30/05 19:56:30 056: execute: normOD > 1
30/05 19:56:30 057: adding 2 neighbors...
30/05 19:56:30 058: execute: normOD < 1
30/05 19:56:30 059: adding 2 neighbors...
30/05 19:56:30 060: executing: prop = 1 - normOD - 1
30/05 19:56:30 062: adding 1 neighbors...
30/05 19:56:30 063: execute: fabs(prop - 1) > epsilon
30/05 19:56:30 064: adding 2 neighbors...
30/05 19:56:30 065: executing: rate = prop * rate
30/05 19:56:30 066: adding 1 neighbors...
30/05 19:56:30 068: exec setContinousFlow(1, 2, 64.9093)
30/05 19:56:30 069: getting variable var3 from the main_namespace...
30/05 19:56:30 081: getting variable var0 from the main_namespace...
30/05 19:56:30 134: getting variable var5 from the main_namespace...
30/05 19:56:30 137: adding 1 neighbors...
30/05 19:56:30 139: exec setContinousFlow(2, 3, 64.9093)
30/05 19:56:30 140: getting variable var2 from the main_namespace...
30/05 19:56:30 193: getting variable var5 from the main_namespace...
30/05 19:56:30 195: adding 1 neighbors...
30/05 19:56:30 215: time variable: 6000
30/05 19:56:30 216: adding 1 neighbors...
30/05 19:56:30 217: executing loop: actualTime < 20000
30/05 19:56:30 219: adding 1 neighbors...
30/05 19:56:30 221: getting variable var4 from the main_namespace...
30/05 19:56:30 278: exec measureOD(2) = 300
30/05 19:56:30 279: adding 1 neighbors...
30/05 19:56:30 281: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:30 283: adding 1 neighbors...
30/05 19:56:30 284: execute: normOD > 1
30/05 19:56:30 286: adding 2 neighbors...
30/05 19:56:30 288: execute: normOD < 1
30/05 19:56:30 294: adding 2 neighbors...
30/05 19:56:30 295: executing: prop = 1 - normOD - 1
30/05 19:56:30 296: adding 1 neighbors...
30/05 19:56:30 298: execute: fabs(prop - 1) > epsilon
30/05 19:56:30 299: adding 2 neighbors...
30/05 19:56:30 300: executing: rate = prop * rate
30/05 19:56:30 301: adding 1 neighbors...
30/05 19:56:30 303: exec setContinousFlow(1, 2, 97.364)
30/05 19:56:30 305: getting variable var3 from the main_namespace...
30/05 19:56:30 316: getting variable var0 from the main_namespace...
30/05 19:56:30 369: getting variable var5 from the main_namespace...
30/05 19:56:30 372: adding 1 neighbors...
30/05 19:56:30 373: exec setContinousFlow(2, 3, 97.364)
30/05 19:56:30 375: getting variable var2 from the main_namespace...
30/05 19:56:30 427: getting variable var5 from the main_namespace...
30/05 19:56:30 429: adding 1 neighbors...
30/05 19:56:30 456: time variable: 7000
30/05 19:56:30 457: adding 1 neighbors...
30/05 19:56:30 458: executing loop: actualTime < 20000
30/05 19:56:30 459: adding 1 neighbors...
30/05 19:56:30 461: getting variable var4 from the main_namespace...
30/05 19:56:30 513: exec measureOD(2) = 350
30/05 19:56:30 515: adding 1 neighbors...
30/05 19:56:30 517: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:30 518: adding 1 neighbors...
30/05 19:56:30 520: execute: normOD > 1
30/05 19:56:30 521: adding 2 neighbors...
30/05 19:56:30 523: execute: normOD < 1
30/05 19:56:30 528: adding 2 neighbors...
30/05 19:56:30 529: executing: prop = 1 - normOD - 1
30/05 19:56:30 530: adding 1 neighbors...
30/05 19:56:30 531: execute: fabs(prop - 1) > epsilon
30/05 19:56:30 532: adding 2 neighbors...
30/05 19:56:30 534: executing: rate = prop * rate
30/05 19:56:30 535: adding 1 neighbors...
30/05 19:56:30 536: exec setContinousFlow(1, 2, 137.932)
30/05 19:56:30 538: getting variable var3 from the main_namespace...
30/05 19:56:30 550: getting variable var0 from the main_namespace...
30/05 19:56:30 602: getting variable var5 from the main_namespace...
30/05 19:56:30 605: adding 1 neighbors...
30/05 19:56:30 606: exec setContinousFlow(2, 3, 137.932)
30/05 19:56:30 608: getting variable var2 from the main_namespace...
30/05 19:56:30 660: getting variable var5 from the main_namespace...
30/05 19:56:30 663: adding 1 neighbors...
30/05 19:56:30 691: time variable: 8000
30/05 19:56:30 693: adding 1 neighbors...
30/05 19:56:30 694: executing loop: actualTime < 20000
30/05 19:56:30 695: adding 1 neighbors...
30/05 19:56:30 697: getting variable var4 from the main_namespace...
30/05 19:56:30 749: exec measureOD(2) = 400
30/05 19:56:30 750: adding 1 neighbors...
30/05 19:56:30 752: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:30 754: adding 1 neighbors...
30/05 19:56:30 755: execute: normOD > 1
30/05 19:56:30 756: adding 2 neighbors...
30/05 19:56:30 757: execute: normOD < 1
30/05 19:56:30 758: adding 2 neighbors...
30/05 19:56:30 759: executing: prop = 1 - normOD - 1
30/05 19:56:30 761: adding 1 neighbors...
30/05 19:56:30 762: execute: fabs(prop - 1) > epsilon
30/05 19:56:30 763: adding 2 neighbors...
30/05 19:56:30 764: executing: rate = prop * rate
30/05 19:56:30 765: adding 1 neighbors...
30/05 19:56:30 767: exec setContinousFlow(1, 2, 183.91)
30/05 19:56:30 768: getting variable var3 from the main_namespace...
30/05 19:56:30 779: getting variable var0 from the main_namespace...
30/05 19:56:30 832: getting variable var5 from the main_namespace...
30/05 19:56:30 835: adding 1 neighbors...
30/05 19:56:30 836: exec setContinousFlow(2, 3, 183.91)
30/05 19:56:30 838: getting variable var2 from the main_namespace...
30/05 19:56:30 890: getting variable var5 from the main_namespace...
30/05 19:56:30 893: adding 1 neighbors...
30/05 19:56:30 913: time variable: 9000
30/05 19:56:30 914: adding 1 neighbors...
30/05 19:56:30 916: executing loop: actualTime < 20000
30/05 19:56:30 917: adding 1 neighbors...
30/05 19:56:30 918: getting variable var4 from the main_namespace...
30/05 19:56:30 971: exec measureOD(2) = 450
30/05 19:56:30 973: adding 1 neighbors...
30/05 19:56:30 974: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:30 976: adding 1 neighbors...
30/05 19:56:30 978: execute: normOD > 1
30/05 19:56:30 979: adding 2 neighbors...
30/05 19:56:30 981: execute: normOD < 1
30/05 19:56:30 982: adding 2 neighbors...
30/05 19:56:30 984: executing: prop = 1 - normOD - 1
30/05 19:56:30 986: adding 1 neighbors...
30/05 19:56:30 988: execute: fabs(prop - 1) > epsilon
30/05 19:56:30 990: adding 2 neighbors...
30/05 19:56:30 992: executing: rate = prop * rate
30/05 19:56:30 992: adding 1 neighbors...
30/05 19:56:30 994: exec setContinousFlow(1, 2, 229.887)
30/05 19:56:30 996: getting variable var3 from the main_namespace...
30/05 19:56:31 007: getting variable var0 from the main_namespace...
30/05 19:56:31 060: getting variable var5 from the main_namespace...
30/05 19:56:31 063: adding 1 neighbors...
30/05 19:56:31 064: exec setContinousFlow(2, 3, 229.887)
30/05 19:56:31 066: getting variable var2 from the main_namespace...
30/05 19:56:31 119: getting variable var5 from the main_namespace...
30/05 19:56:31 122: adding 1 neighbors...
30/05 19:56:31 147: time variable: 10000
30/05 19:56:31 149: adding 1 neighbors...
30/05 19:56:31 150: executing loop: actualTime < 20000
30/05 19:56:31 152: adding 1 neighbors...
30/05 19:56:31 154: getting variable var4 from the main_namespace...
30/05 19:56:31 213: exec measureOD(2) = 500
30/05 19:56:31 215: adding 1 neighbors...
30/05 19:56:31 216: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:31 218: adding 1 neighbors...
30/05 19:56:31 219: execute: normOD > 1
30/05 19:56:31 221: adding 2 neighbors...
30/05 19:56:31 222: execute: normOD < 1
30/05 19:56:31 229: adding 2 neighbors...
30/05 19:56:31 230: executing: prop = 1 - normOD - 1
30/05 19:56:31 232: adding 1 neighbors...
30/05 19:56:31 233: execute: fabs(prop - 1) > epsilon
30/05 19:56:31 234: adding 2 neighbors...
30/05 19:56:31 235: executing: rate = prop * rate
30/05 19:56:31 237: adding 1 neighbors...
30/05 19:56:31 245: exec setContinousFlow(1, 2, 268.202)
30/05 19:56:31 246: getting variable var3 from the main_namespace...
30/05 19:56:31 257: getting variable var0 from the main_namespace...
30/05 19:56:31 309: getting variable var5 from the main_namespace...
30/05 19:56:31 311: adding 1 neighbors...
30/05 19:56:31 313: exec setContinousFlow(2, 3, 268.202)
30/05 19:56:31 314: getting variable var2 from the main_namespace...
30/05 19:56:31 366: getting variable var5 from the main_namespace...
30/05 19:56:31 369: adding 1 neighbors...
30/05 19:56:31 390: time variable: 11000
30/05 19:56:31 391: adding 1 neighbors...
30/05 19:56:31 392: executing loop: actualTime < 20000
30/05 19:56:31 394: adding 1 neighbors...
30/05 19:56:31 395: getting variable var4 from the main_namespace...
30/05 19:56:31 447: exec measureOD(2) = 550
30/05 19:56:31 449: adding 1 neighbors...
30/05 19:56:31 450: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:31 452: adding 1 neighbors...
30/05 19:56:31 453: execute: normOD > 1
30/05 19:56:31 455: adding 2 neighbors...
30/05 19:56:31 456: execute: normOD < 1
30/05 19:56:31 462: adding 2 neighbors...
30/05 19:56:31 463: executing: prop = 1 - normOD - 1
30/05 19:56:31 464: adding 1 neighbors...
30/05 19:56:31 465: execute: fabs(prop - 1) > epsilon
30/05 19:56:31 466: adding 2 neighbors...
30/05 19:56:31 497: time variable: 12000
30/05 19:56:31 498: adding 1 neighbors...
30/05 19:56:31 499: executing loop: actualTime < 20000
30/05 19:56:31 501: adding 1 neighbors...
30/05 19:56:31 502: getting variable var4 from the main_namespace...
30/05 19:56:31 554: exec measureOD(2) = 600
30/05 19:56:31 556: adding 1 neighbors...
30/05 19:56:31 557: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:31 559: adding 1 neighbors...
30/05 19:56:31 560: execute: normOD > 1
30/05 19:56:31 561: adding 2 neighbors...
30/05 19:56:31 561: execute: normOD < 1
30/05 19:56:31 563: adding 2 neighbors...
30/05 19:56:31 564: executing: prop = 1
30/05 19:56:31 565: adding 1 neighbors...
30/05 19:56:31 566: execute: fabs(prop - 1) > epsilon
30/05 19:56:31 567: adding 2 neighbors...
30/05 19:56:31 598: time variable: 13000
30/05 19:56:31 599: adding 1 neighbors...
30/05 19:56:31 601: executing loop: actualTime < 20000
30/05 19:56:31 603: adding 1 neighbors...
30/05 19:56:31 605: getting variable var4 from the main_namespace...
30/05 19:56:31 662: exec measureOD(2) = 650
30/05 19:56:31 664: adding 1 neighbors...
30/05 19:56:31 666: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:31 668: adding 1 neighbors...
30/05 19:56:31 670: execute: normOD > 1
30/05 19:56:31 671: adding 2 neighbors...
30/05 19:56:31 673: executing: prop = 1 + normOD - 1
30/05 19:56:31 676: adding 1 neighbors...
30/05 19:56:31 677: execute: fabs(prop - 1) > epsilon
30/05 19:56:31 679: adding 2 neighbors...
30/05 19:56:31 700: time variable: 14000
30/05 19:56:31 701: adding 1 neighbors...
30/05 19:56:31 703: executing loop: actualTime < 20000
30/05 19:56:31 704: adding 1 neighbors...
30/05 19:56:31 705: getting variable var4 from the main_namespace...
30/05 19:56:31 762: exec measureOD(2) = 600
30/05 19:56:31 764: adding 1 neighbors...
30/05 19:56:31 765: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:31 767: adding 1 neighbors...
30/05 19:56:31 768: execute: normOD > 1
30/05 19:56:31 769: adding 2 neighbors...
30/05 19:56:31 771: execute: normOD < 1
30/05 19:56:31 777: adding 2 neighbors...
30/05 19:56:31 778: executing: prop = 1
30/05 19:56:31 779: adding 1 neighbors...
30/05 19:56:31 780: execute: fabs(prop - 1) > epsilon
30/05 19:56:31 782: adding 2 neighbors...
30/05 19:56:31 811: time variable: 15000
30/05 19:56:31 813: adding 1 neighbors...
30/05 19:56:31 814: executing loop: actualTime < 20000
30/05 19:56:31 816: adding 1 neighbors...
30/05 19:56:31 817: getting variable var4 from the main_namespace...
30/05 19:56:31 869: exec measureOD(2) = 625
30/05 19:56:31 871: adding 1 neighbors...
30/05 19:56:31 872: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:31 874: adding 1 neighbors...
30/05 19:56:31 875: execute: normOD > 1
30/05 19:56:31 876: adding 2 neighbors...
30/05 19:56:31 876: executing: prop = 1 + normOD - 1
30/05 19:56:31 879: adding 1 neighbors...
30/05 19:56:31 880: execute: fabs(prop - 1) > epsilon
30/05 19:56:31 882: adding 2 neighbors...
30/05 19:56:31 907: time variable: 16000
30/05 19:56:31 908: adding 1 neighbors...
30/05 19:56:31 909: executing loop: actualTime < 20000
30/05 19:56:31 911: adding 1 neighbors...
30/05 19:56:31 912: getting variable var4 from the main_namespace...
30/05 19:56:31 964: exec measureOD(2) = 600
30/05 19:56:31 965: adding 1 neighbors...
30/05 19:56:31 967: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:31 968: adding 1 neighbors...
30/05 19:56:31 970: execute: normOD > 1
30/05 19:56:31 971: adding 2 neighbors...
30/05 19:56:31 972: execute: normOD < 1
30/05 19:56:31 976: adding 2 neighbors...
30/05 19:56:31 977: executing: prop = 1
30/05 19:56:31 978: adding 1 neighbors...
30/05 19:56:31 980: execute: fabs(prop - 1) > epsilon
30/05 19:56:31 981: adding 2 neighbors...
30/05 19:56:32 013: time variable: 17000
30/05 19:56:32 014: adding 1 neighbors...
30/05 19:56:32 015: executing loop: actualTime < 20000
30/05 19:56:32 017: adding 1 neighbors...
30/05 19:56:32 018: getting variable var4 from the main_namespace...
30/05 19:56:32 069: exec measureOD(2) = 600
30/05 19:56:32 072: adding 1 neighbors...
30/05 19:56:32 073: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:32 075: adding 1 neighbors...
30/05 19:56:32 077: execute: normOD > 1
30/05 19:56:32 077: adding 2 neighbors...
30/05 19:56:32 079: execute: normOD < 1
30/05 19:56:32 080: adding 2 neighbors...
30/05 19:56:32 080: executing: prop = 1
30/05 19:56:32 082: adding 1 neighbors...
30/05 19:56:32 083: execute: fabs(prop - 1) > epsilon
30/05 19:56:32 085: adding 2 neighbors...
30/05 19:56:32 113: time variable: 18000
30/05 19:56:32 114: adding 1 neighbors...
30/05 19:56:32 116: executing loop: actualTime < 20000
30/05 19:56:32 117: adding 1 neighbors...
30/05 19:56:32 118: getting variable var4 from the main_namespace...
30/05 19:56:32 171: exec measureOD(2) = 600
30/05 19:56:32 173: adding 1 neighbors...
30/05 19:56:32 174: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:32 176: adding 1 neighbors...
30/05 19:56:32 177: execute: normOD > 1
30/05 19:56:32 178: adding 2 neighbors...
30/05 19:56:32 179: execute: normOD < 1
30/05 19:56:32 180: adding 2 neighbors...
30/05 19:56:32 181: executing: prop = 1
30/05 19:56:32 183: adding 1 neighbors...
30/05 19:56:32 184: execute: fabs(prop - 1) > epsilon
30/05 19:56:32 186: adding 2 neighbors...
30/05 19:56:32 211: time variable: 19000
30/05 19:56:32 212: adding 1 neighbors...
30/05 19:56:32 213: executing loop: actualTime < 20000
30/05 19:56:32 215: adding 1 neighbors...
30/05 19:56:32 216: getting variable var4 from the main_namespace...
30/05 19:56:32 267: exec measureOD(2) = 600
30/05 19:56:32 269: adding 1 neighbors...
30/05 19:56:32 271: executing: normOD = 1 + od - threshold / threshold
30/05 19:56:32 273: adding 1 neighbors...
30/05 19:56:32 275: execute: normOD > 1
30/05 19:56:32 276: adding 2 neighbors...
30/05 19:56:32 277: execute: normOD < 1
30/05 19:56:32 278: adding 2 neighbors...
30/05 19:56:32 280: executing: prop = 1
30/05 19:56:32 281: adding 1 neighbors...
30/05 19:56:32 282: execute: fabs(prop - 1) > epsilon
30/05 19:56:32 283: adding 2 neighbors...
30/05 19:56:32 315: time variable: 20000
30/05 19:56:32 317: adding 1 neighbors...
30/05 19:56:32 318: executing loop: actualTime < 20000
30/05 19:56:32 320: adding 1 neighbors...
30/05 19:56:32 328: finalizing environment...
30/05 20:03:07 027: initializing environment...
30/05 20:03:07 043: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\control.py
30/05 20:03:07 049: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\EVOPROG_dummyInjector.py
30/05 20:03:07 055: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\extractor.py
30/05 20:03:07 061: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\injector.py
30/05 20:03:07 067: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\light.py
30/05 20:03:07 072: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\mixer.py
30/05 20:03:07 078: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\odsensor.py
30/05 20:03:07 083: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins\temperature.py
30/05 20:03:07 090: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_continuousPump.py
30/05 20:03:07 096: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_discretePump.py
30/05 20:03:07 102: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_dummyInjector.py
30/05 20:03:07 108: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_light.py
30/05 20:03:07 115: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_mixer.py
30/05 20:03:07 121: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_odsensor.py
30/05 20:03:07 126: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_sixwayvalve.py
30/05 20:03:07 138: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG\EVOPROG_temperature.py
30/05 20:03:07 144: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\test.py
30/05 20:03:07 149: adding path: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\EVOPROG
30/05 20:03:07 153: importing file: EVOPROG_continuousPump
30/05 20:03:07 155: making new var name...
30/05 20:03:07 156: creating new var on the environment...
30/05 20:03:07 158: getting variable var0 from the main_namespace...
30/05 20:03:07 160: importing file: EVOPROG_discretePump
30/05 20:03:07 161: making new var name...
30/05 20:03:07 163: creating new var on the environment...
30/05 20:03:07 164: getting variable var1 from the main_namespace...
30/05 20:03:07 166: making new var name...
30/05 20:03:07 167: creating new var on the environment...
30/05 20:03:07 169: getting variable var2 from the main_namespace...
30/05 20:03:07 171: importing file: EVOPROG_sixwayvalve
30/05 20:03:07 173: making new var name...
30/05 20:03:07 182: creating new var on the environment...
30/05 20:03:07 184: getting variable var3 from the main_namespace...
30/05 20:03:07 186: getting variable var3 from the main_namespace...
30/05 20:03:07 205: executing: normOD = 1 + od - threshold / threshold
30/05 20:03:07 214: executing: epsilon = 0.1
30/05 20:03:07 216: executing: threshold = 600
30/05 20:03:07 218: executing: rate = 2
30/05 20:03:07 219: sketching loadContainer(1, 1000)
30/05 20:03:07 221: sketching loadContainer(2, 1000)
30/05 20:03:07 222: sketching loadContainer(3, 1000)
30/05 20:03:07 224: executing loop: actualTime < 20000
30/05 20:03:07 224: sketching measureOD(2)
30/05 20:03:07 227: execute: normOD > 1
30/05 20:03:07 228: execute: normOD < 1
30/05 20:03:07 229: executing: prop = 1 + normOD - 1
30/05 20:03:07 233: executing: prop = 1 - normOD - 1
30/05 20:03:07 238: executing: prop = 1
30/05 20:03:07 239: execute: fabs(prop - 1) > epsilon
30/05 20:03:07 246: executing: rate = prop * rate
30/05 20:03:07 247: sketching setContinousFlow(1, 2, 2)
30/05 20:03:07 249: sketching setContinousFlow(2, 3, 2)
30/05 20:03:07 250: sketching timeStept
30/05 20:03:07 251: time variable: 1
30/05 20:03:07 255: executing: epsilon = 0.1
30/05 20:03:07 255: adding 1 neighbors...
30/05 20:03:07 265: executing: threshold = 600
30/05 20:03:07 267: adding 1 neighbors...
30/05 20:03:07 268: executing: rate = 2
30/05 20:03:07 269: adding 1 neighbors...
30/05 20:03:07 271: exec loadContainer(1, 1000)
30/05 20:03:07 272: adding 1 neighbors...
30/05 20:03:07 274: exec loadContainer(2, 1000)
30/05 20:03:07 279: adding 1 neighbors...
30/05 20:03:07 280: exec loadContainer(3, 1000)
30/05 20:03:07 281: adding 1 neighbors...
30/05 20:03:07 282: executing loop: actualTime < 20000
30/05 20:03:07 284: adding 1 neighbors...
30/05 20:03:07 285: importing file: EVOPROG_odsensor
30/05 20:03:07 287: making new var name...
30/05 20:03:07 288: creating new var on the environment...
30/05 20:03:07 290: getting variable var4 from the main_namespace...
30/05 20:03:07 292: send  7 bytes
30/05 20:03:07 343: waiting for data for 0 ms
30/05 20:03:07 444: waiting for data for 100 ms
30/05 20:03:07 546: waiting for data for 200 ms
30/05 20:03:07 654: waiting for data for 300 ms
30/05 20:03:07 761: waiting for data for 400 ms
30/05 20:03:07 866: waiting for data for 500 ms
30/05 20:03:07 968: waiting for data for 600 ms
30/05 20:03:08 071: waiting for data for 700 ms
30/05 20:03:08 173: waiting for data for 800 ms
30/05 20:03:08 275: waiting for data for 900 ms
30/05 20:03:08 377: read 1 bytes
30/05 20:03:08 379: read 1 bytes
30/05 20:03:08 380: exec measureOD(2) = 0
30/05 20:03:08 381: adding 1 neighbors...
30/05 20:03:08 382: executing: normOD = 1 + od - threshold / threshold
30/05 20:03:08 384: adding 1 neighbors...
30/05 20:03:08 386: execute: normOD > 1
30/05 20:03:08 387: adding 2 neighbors...
30/05 20:03:08 389: execute: normOD < 1
30/05 20:03:08 390: adding 2 neighbors...
30/05 20:03:08 392: executing: prop = 1 - normOD - 1
30/05 20:03:08 394: adding 1 neighbors...
30/05 20:03:08 395: execute: fabs(prop - 1) > epsilon
30/05 20:03:08 396: adding 2 neighbors...
30/05 20:03:08 398: executing: rate = prop * rate
30/05 20:03:08 399: adding 1 neighbors...
30/05 20:03:08 401: exec setContinousFlow(1, 2, 4)
30/05 20:03:08 403: getting variable var3 from the main_namespace...
30/05 20:03:08 405: send  8 bytes
30/05 20:03:08 416: waiting for data for 0 ms
30/05 20:03:08 518: waiting for data for 100 ms
30/05 20:03:08 621: waiting for data for 200 ms
30/05 20:03:08 723: waiting for data for 300 ms
30/05 20:03:08 826: waiting for data for 400 ms
30/05 20:03:08 928: waiting for data for 500 ms
30/05 20:03:09 030: waiting for data for 600 ms
30/05 20:03:09 132: waiting for data for 700 ms
30/05 20:03:09 235: waiting for data for 800 ms
30/05 20:03:09 337: waiting for data for 900 ms
30/05 20:03:09 441: waiting for data for 1000 ms
30/05 20:03:09 543: read 1 bytes
30/05 20:03:09 545: read 1 bytes
30/05 20:03:09 546: read 1 bytes
30/05 20:03:09 547: read 1 bytes
30/05 20:03:09 548: read 1 bytes
30/05 20:03:09 549: read 1 bytes
30/05 20:03:09 550: read 1 bytes
30/05 20:03:09 551: read 1 bytes
30/05 20:03:09 604: getting variable var0 from the main_namespace...
30/05 20:03:09 606: send  8 bytes
30/05 20:03:09 657: waiting for data for 0 ms
30/05 20:03:09 759: waiting for data for 100 ms
30/05 20:03:09 862: waiting for data for 200 ms
30/05 20:03:09 964: waiting for data for 300 ms
30/05 20:03:10 066: waiting for data for 400 ms
30/05 20:03:10 168: waiting for data for 500 ms
30/05 20:03:10 271: waiting for data for 600 ms
30/05 20:03:10 373: waiting for data for 700 ms
30/05 20:03:10 477: waiting for data for 800 ms
30/05 20:03:10 579: waiting for data for 900 ms
30/05 20:03:10 681: read 1 bytes
30/05 20:03:10 682: read 1 bytes
30/05 20:03:10 683: read 1 bytes
30/05 20:03:10 685: read 1 bytes
30/05 20:03:10 686: read 1 bytes
30/05 20:03:10 688: read 1 bytes
30/05 20:03:10 690: read 1 bytes
30/05 20:03:10 691: read 1 bytes
30/05 20:03:10 742: adding path: D:\Angel\Documentos\Universidad\TFM\EVOPROGdebug\codigo\EvoCoder_Release_v1\EvoCoder\plugins\basePlugins
30/05 20:03:10 748: importing file: EVOPROG_dummyInjector
30/05 20:03:10 751: making new var name...
30/05 20:03:10 752: creating new var on the environment...
30/05 20:03:10 754: getting variable var5 from the main_namespace...
30/05 20:03:10 756: adding 1 neighbors...
30/05 20:03:10 757: exec setContinousFlow(2, 3, 4)
30/05 20:03:10 758: getting variable var2 from the main_namespace...
30/05 20:03:10 760: send  8 bytes
30/05 20:03:10 810: waiting for data for 0 ms
30/05 20:03:10 912: waiting for data for 100 ms
30/05 20:03:11 015: waiting for data for 200 ms
30/05 20:03:11 118: waiting for data for 300 ms
30/05 20:03:11 220: waiting for data for 400 ms
30/05 20:03:11 323: waiting for data for 500 ms
30/05 20:03:11 425: waiting for data for 600 ms
30/05 20:03:11 527: waiting for data for 700 ms
30/05 20:03:11 629: waiting for data for 800 ms
30/05 20:03:11 731: waiting for data for 900 ms
30/05 20:03:11 833: read 1 bytes
30/05 20:03:11 835: read 1 bytes
30/05 20:03:11 836: read 1 bytes
30/05 20:03:11 838: read 1 bytes
30/05 20:03:11 840: read 1 bytes
30/05 20:03:11 842: read 1 bytes
30/05 20:03:11 843: read 1 bytes
30/05 20:03:11 843: read 1 bytes
30/05 20:03:11 895: getting variable var5 from the main_namespace...
30/05 20:03:11 898: adding 1 neighbors...
30/05 20:03:11 899: executing timeStept: passed 4647 ms
30/05 20:03:11 920: time variable: 4647
30/05 20:03:11 928: adding 1 neighbors...
30/05 20:03:11 928: executing loop: actualTime < 20000
30/05 20:03:11 930: adding 1 neighbors...
30/05 20:03:11 931: getting variable var4 from the main_namespace...
30/05 20:03:11 933: send  7 bytes
30/05 20:03:11 984: waiting for data for 0 ms
30/05 20:03:12 088: waiting for data for 100 ms
30/05 20:03:12 190: waiting for data for 200 ms
30/05 20:03:12 292: waiting for data for 300 ms
30/05 20:03:12 394: waiting for data for 400 ms
30/05 20:03:12 496: waiting for data for 500 ms
30/05 20:03:12 600: waiting for data for 600 ms
30/05 20:03:12 702: waiting for data for 700 ms
30/05 20:03:12 806: waiting for data for 800 ms
30/05 20:03:12 910: waiting for data for 900 ms
30/05 20:03:13 014: read 1 bytes
30/05 20:03:13 019: read 1 bytes
30/05 20:03:13 025: read 1 bytes
30/05 20:03:13 032: exec measureOD(2) = 50
30/05 20:03:13 038: adding 1 neighbors...
30/05 20:03:13 045: executing: normOD = 1 + od - threshold / threshold
30/05 20:03:13 055: adding 1 neighbors...
30/05 20:03:13 060: execute: normOD > 1
30/05 20:03:13 063: adding 2 neighbors...
30/05 20:03:13 067: execute: normOD < 1
30/05 20:03:13 070: adding 2 neighbors...
30/05 20:03:13 074: executing: prop = 1 - normOD - 1
30/05 20:03:13 078: adding 1 neighbors...
30/05 20:03:13 082: execute: fabs(prop - 1) > epsilon
30/05 20:03:13 085: adding 2 neighbors...
30/05 20:03:13 088: executing: rate = prop * rate
30/05 20:03:13 091: adding 1 neighbors...
30/05 20:03:13 093: exec setContinousFlow(1, 2, 7.66667)
30/05 20:03:13 096: getting variable var3 from the main_namespace...
30/05 20:03:13 100: send  8 bytes
30/05 20:03:13 111: waiting for data for 0 ms
30/05 20:03:13 215: waiting for data for 100 ms
30/05 20:03:13 322: waiting for data for 200 ms
30/05 20:03:13 430: waiting for data for 300 ms
30/05 20:03:13 536: waiting for data for 400 ms
30/05 20:03:13 643: waiting for data for 500 ms
30/05 20:03:13 748: waiting for data for 600 ms
30/05 20:03:13 850: waiting for data for 700 ms
30/05 20:03:13 953: waiting for data for 800 ms
30/05 20:03:14 056: waiting for data for 900 ms
30/05 20:03:14 159: waiting for data for 1000 ms
30/05 20:03:14 261: read 1 bytes
30/05 20:03:14 262: read 1 bytes
30/05 20:03:14 263: read 1 bytes
30/05 20:03:14 264: read 1 bytes
30/05 20:03:14 266: read 1 bytes
30/05 20:03:14 266: read 1 bytes
30/05 20:03:14 267: read 1 bytes
30/05 20:03:14 268: read 1 bytes
30/05 20:03:14 320: getting variable var0 from the main_namespace...
30/05 20:03:14 323: send  8 bytes
30/05 20:03:14 374: waiting for data for 0 ms
30/05 20:03:14 476: waiting for data for 100 ms
30/05 20:03:14 579: waiting for data for 200 ms
30/05 20:03:14 683: waiting for data for 300 ms
30/05 20:03:14 785: waiting for data for 400 ms
30/05 20:03:14 889: waiting for data for 500 ms
30/05 20:03:14 991: waiting for data for 600 ms
30/05 20:03:15 093: waiting for data for 700 ms
30/05 20:03:15 196: waiting for data for 800 ms
30/05 20:03:15 298: waiting for data for 900 ms
30/05 20:03:15 400: read 1 bytes
30/05 20:03:15 401: read 1 bytes
30/05 20:03:15 402: read 1 bytes
30/05 20:03:15 404: read 1 bytes
30/05 20:03:15 405: read 1 bytes
30/05 20:03:15 406: read 1 bytes
30/05 20:03:15 407: read 1 bytes
30/05 20:03:15 408: read 1 bytes
30/05 20:03:15 459: getting variable var5 from the main_namespace...
30/05 20:03:15 462: adding 1 neighbors...
30/05 20:03:15 463: exec setContinousFlow(2, 3, 7.66667)
30/05 20:03:15 465: getting variable var2 from the main_namespace...
30/05 20:03:15 467: send  8 bytes
30/05 20:03:15 518: waiting for data for 0 ms
30/05 20:03:15 620: waiting for data for 100 ms
30/05 20:03:15 723: waiting for data for 200 ms
30/05 20:03:15 825: waiting for data for 300 ms
30/05 20:03:15 927: waiting for data for 400 ms
30/05 20:03:16 029: waiting for data for 500 ms
30/05 20:03:16 131: waiting for data for 600 ms
30/05 20:03:16 234: waiting for data for 700 ms
30/05 20:03:16 336: waiting for data for 800 ms
30/05 20:03:16 440: waiting for data for 900 ms
30/05 20:03:16 542: read 1 bytes
30/05 20:03:16 544: read 1 bytes
30/05 20:03:16 545: read 1 bytes
30/05 20:03:16 546: read 1 bytes
30/05 20:03:16 547: read 1 bytes
30/05 20:03:16 547: read 1 bytes
30/05 20:03:16 548: read 1 bytes
30/05 20:03:16 549: read 1 bytes
30/05 20:03:16 600: getting variable var5 from the main_namespace...
30/05 20:03:16 603: adding 1 neighbors...
30/05 20:03:16 604: executing timeStept: passed 4704 ms
30/05 20:03:16 626: time variable: 9351
30/05 20:03:16 634: adding 1 neighbors...
30/05 20:03:16 635: executing loop: actualTime < 20000
30/05 20:03:16 637: adding 1 neighbors...
30/05 20:03:16 638: getting variable var4 from the main_namespace...
30/05 20:03:16 640: send  7 bytes
30/05 20:03:16 692: waiting for data for 0 ms
30/05 20:03:16 793: waiting for data for 100 ms
30/05 20:03:16 896: waiting for data for 200 ms
30/05 20:03:16 999: waiting for data for 300 ms
30/05 20:03:17 101: waiting for data for 400 ms
30/05 20:03:17 204: waiting for data for 500 ms
30/05 20:03:17 306: waiting for data for 600 ms
30/05 20:03:17 408: waiting for data for 700 ms
30/05 20:03:17 510: waiting for data for 800 ms
30/05 20:03:17 613: waiting for data for 900 ms
30/05 20:03:17 715: read 1 bytes
30/05 20:03:17 716: read 1 bytes
30/05 20:03:17 717: read 1 bytes
30/05 20:03:17 718: read 1 bytes
30/05 20:03:17 720: exec measureOD(2) = 100
30/05 20:03:17 721: adding 1 neighbors...
30/05 20:03:17 723: executing: normOD = 1 + od - threshold / threshold
30/05 20:03:17 725: adding 1 neighbors...
30/05 20:03:17 726: execute: normOD > 1
30/05 20:03:17 728: adding 2 neighbors...
30/05 20:03:17 729: execute: normOD < 1
30/05 20:03:17 731: adding 2 neighbors...
30/05 20:03:17 732: executing: prop = 1 - normOD - 1
30/05 20:03:17 734: adding 1 neighbors...
30/05 20:03:17 735: execute: fabs(prop - 1) > epsilon
30/05 20:03:17 738: adding 2 neighbors...
30/05 20:03:17 747: executing: rate = prop * rate
30/05 20:03:17 748: adding 1 neighbors...
30/05 20:03:17 749: exec setContinousFlow(1, 2, 14.0556)
30/05 20:03:17 751: getting variable var3 from the main_namespace...
30/05 20:03:17 755: send  8 bytes
30/05 20:03:17 766: waiting for data for 0 ms
30/05 20:03:17 868: waiting for data for 100 ms
30/05 20:03:17 970: waiting for data for 200 ms
30/05 20:03:18 072: waiting for data for 300 ms
30/05 20:03:18 175: waiting for data for 400 ms
30/05 20:03:18 278: waiting for data for 500 ms
30/05 20:03:18 380: waiting for data for 600 ms
30/05 20:03:18 483: waiting for data for 700 ms
30/05 20:03:18 585: waiting for data for 800 ms
30/05 20:03:18 687: waiting for data for 900 ms
30/05 20:03:18 791: waiting for data for 1000 ms
30/05 20:03:18 897: read 1 bytes
30/05 20:03:18 901: read 1 bytes
30/05 20:03:18 906: read 1 bytes
30/05 20:03:18 910: read 1 bytes
30/05 20:03:18 914: read 1 bytes
30/05 20:03:18 918: read 1 bytes
30/05 20:03:18 924: read 1 bytes
30/05 20:03:18 928: read 1 bytes
30/05 20:03:18 983: getting variable var0 from the main_namespace...
30/05 20:03:18 991: send  8 bytes
30/05 20:03:19 043: waiting for data for 0 ms
30/05 20:03:19 149: waiting for data for 100 ms
30/05 20:03:19 257: waiting for data for 200 ms
30/05 20:03:19 363: waiting for data for 300 ms
30/05 20:03:19 470: waiting for data for 400 ms
30/05 20:03:19 579: waiting for data for 500 ms
30/05 20:03:19 681: waiting for data for 600 ms
30/05 20:03:19 784: waiting for data for 700 ms
30/05 20:03:19 887: waiting for data for 800 ms
30/05 20:03:19 990: waiting for data for 900 ms
30/05 20:03:20 092: read 1 bytes
30/05 20:03:20 094: read 1 bytes
30/05 20:03:20 095: read 1 bytes
30/05 20:03:20 096: read 1 bytes
30/05 20:03:20 097: read 1 bytes
30/05 20:03:20 099: read 1 bytes
30/05 20:03:20 099: read 1 bytes
30/05 20:03:20 100: read 1 bytes
30/05 20:03:20 152: getting variable var5 from the main_namespace...
30/05 20:03:20 156: adding 1 neighbors...
30/05 20:03:20 157: exec setContinousFlow(2, 3, 14.0556)
30/05 20:03:20 159: getting variable var2 from the main_namespace...
30/05 20:03:20 161: send  8 bytes
30/05 20:03:20 213: waiting for data for 0 ms
30/05 20:03:20 315: waiting for data for 100 ms
30/05 20:03:20 417: waiting for data for 200 ms
30/05 20:03:20 519: waiting for data for 300 ms
30/05 20:03:20 623: waiting for data for 400 ms
30/05 20:03:20 725: waiting for data for 500 ms
30/05 20:03:20 827: waiting for data for 600 ms
30/05 20:03:20 930: waiting for data for 700 ms
30/05 20:03:21 032: waiting for data for 800 ms
30/05 20:03:21 134: waiting for data for 900 ms
30/05 20:03:21 236: read 1 bytes
30/05 20:03:21 238: read 1 bytes
30/05 20:03:21 240: read 1 bytes
30/05 20:03:21 241: read 1 bytes
30/05 20:03:21 241: read 1 bytes
30/05 20:03:21 242: read 1 bytes
30/05 20:03:21 243: read 1 bytes
30/05 20:03:21 244: read 1 bytes
30/05 20:03:21 296: getting variable var5 from the main_namespace...
30/05 20:03:21 299: adding 1 neighbors...
30/05 20:03:21 300: executing timeStept: passed 4696 ms
30/05 20:03:21 319: time variable: 14047
30/05 20:03:21 320: adding 1 neighbors...
30/05 20:03:21 322: executing loop: actualTime < 20000
30/05 20:03:21 323: adding 1 neighbors...
30/05 20:03:21 324: getting variable var4 from the main_namespace...
30/05 20:03:21 326: send  7 bytes
30/05 20:03:21 378: waiting for data for 0 ms
30/05 20:03:21 480: waiting for data for 100 ms
30/05 20:03:21 582: waiting for data for 200 ms
30/05 20:03:21 684: waiting for data for 300 ms
30/05 20:03:21 788: waiting for data for 400 ms
30/05 20:03:21 890: waiting for data for 500 ms
30/05 20:03:21 992: waiting for data for 600 ms
30/05 20:03:22 094: waiting for data for 700 ms
30/05 20:03:22 197: waiting for data for 800 ms
30/05 20:03:22 299: waiting for data for 900 ms
30/05 20:03:22 402: read 1 bytes
30/05 20:03:22 404: read 1 bytes
30/05 20:03:22 405: read 1 bytes
30/05 20:03:22 406: read 1 bytes
30/05 20:03:22 407: exec measureOD(2) = 150
30/05 20:03:22 408: adding 1 neighbors...
30/05 20:03:22 409: executing: normOD = 1 + od - threshold / threshold
30/05 20:03:22 411: adding 1 neighbors...
30/05 20:03:22 412: execute: normOD > 1
30/05 20:03:22 414: adding 2 neighbors...
30/05 20:03:22 415: execute: normOD < 1
30/05 20:03:22 416: adding 2 neighbors...
30/05 20:03:22 417: executing: prop = 1 - normOD - 1
30/05 20:03:22 419: adding 1 neighbors...
30/05 20:03:22 420: execute: fabs(prop - 1) > epsilon
30/05 20:03:22 422: adding 2 neighbors...
30/05 20:03:22 432: executing: rate = prop * rate
30/05 20:03:22 434: adding 1 neighbors...
30/05 20:03:22 435: exec setContinousFlow(1, 2, 24.5972)
30/05 20:03:22 438: getting variable var3 from the main_namespace...
30/05 20:03:22 441: send  8 bytes
30/05 20:03:22 452: waiting for data for 0 ms
30/05 20:03:22 554: waiting for data for 100 ms
30/05 20:03:22 657: waiting for data for 200 ms
30/05 20:03:22 759: waiting for data for 300 ms
30/05 20:03:22 862: waiting for data for 400 ms
30/05 20:03:22 963: waiting for data for 500 ms
30/05 20:03:23 066: waiting for data for 600 ms
30/05 20:03:23 168: waiting for data for 700 ms
30/05 20:03:23 270: waiting for data for 800 ms
30/05 20:03:23 372: waiting for data for 900 ms
30/05 20:03:23 475: waiting for data for 1000 ms
30/05 20:03:23 577: read 1 bytes
30/05 20:03:23 578: read 1 bytes
30/05 20:03:23 579: read 1 bytes
30/05 20:03:23 580: read 1 bytes
30/05 20:03:23 580: read 1 bytes
30/05 20:03:23 582: read 1 bytes
30/05 20:03:23 583: read 1 bytes
30/05 20:03:23 584: read 1 bytes
30/05 20:03:23 635: getting variable var0 from the main_namespace...
30/05 20:03:23 638: send  8 bytes
30/05 20:03:23 689: waiting for data for 0 ms
30/05 20:03:23 791: waiting for data for 100 ms
30/05 20:03:23 893: waiting for data for 200 ms
30/05 20:03:23 995: waiting for data for 300 ms
30/05 20:03:24 097: waiting for data for 400 ms
30/05 20:03:24 199: waiting for data for 500 ms
30/05 20:03:24 302: waiting for data for 600 ms
30/05 20:03:24 405: waiting for data for 700 ms
30/05 20:03:24 512: waiting for data for 800 ms
30/05 20:03:24 619: waiting for data for 900 ms
30/05 20:03:24 727: read 1 bytes
30/05 20:03:24 731: read 1 bytes
30/05 20:03:24 736: read 1 bytes
30/05 20:03:24 741: read 1 bytes
30/05 20:03:24 746: read 1 bytes
30/05 20:03:24 750: read 1 bytes
30/05 20:03:24 757: read 1 bytes
30/05 20:03:24 762: read 1 bytes
30/05 20:03:24 818: getting variable var5 from the main_namespace...
30/05 20:03:24 828: adding 1 neighbors...
30/05 20:03:24 834: exec setContinousFlow(2, 3, 24.5972)
30/05 20:03:24 843: getting variable var2 from the main_namespace...
30/05 20:03:24 852: send  8 bytes
30/05 20:03:24 908: waiting for data for 0 ms
30/05 20:03:25 014: waiting for data for 100 ms
30/05 20:03:25 121: waiting for data for 200 ms
30/05 20:03:25 230: waiting for data for 300 ms
30/05 20:03:25 336: waiting for data for 400 ms
30/05 20:03:25 441: waiting for data for 500 ms
30/05 20:03:25 544: waiting for data for 600 ms
30/05 20:03:25 646: waiting for data for 700 ms
30/05 20:03:25 748: waiting for data for 800 ms
30/05 20:03:25 851: waiting for data for 900 ms
30/05 20:03:25 953: read 1 bytes
30/05 20:03:25 954: read 1 bytes
30/05 20:03:25 956: read 1 bytes
30/05 20:03:25 957: read 1 bytes
30/05 20:03:25 957: read 1 bytes
30/05 20:03:25 959: read 1 bytes
30/05 20:03:25 960: read 1 bytes
30/05 20:03:25 961: read 1 bytes
30/05 20:03:26 012: getting variable var5 from the main_namespace...
30/05 20:03:26 015: adding 1 neighbors...
30/05 20:03:26 016: executing timeStept: passed 4716 ms
30/05 20:03:26 039: time variable: 18763
30/05 20:03:26 045: adding 1 neighbors...
30/05 20:03:26 046: executing loop: actualTime < 20000
30/05 20:03:26 048: adding 1 neighbors...
30/05 20:03:26 050: getting variable var4 from the main_namespace...
30/05 20:03:26 052: send  7 bytes
30/05 20:03:26 103: waiting for data for 0 ms
30/05 20:03:26 205: waiting for data for 100 ms
30/05 20:03:26 308: waiting for data for 200 ms
30/05 20:03:26 410: waiting for data for 300 ms
30/05 20:03:26 512: waiting for data for 400 ms
30/05 20:03:26 615: waiting for data for 500 ms
30/05 20:03:26 717: waiting for data for 600 ms
30/05 20:03:26 820: waiting for data for 700 ms
30/05 20:03:26 924: waiting for data for 800 ms
30/05 20:03:27 026: waiting for data for 900 ms
30/05 20:03:27 128: read 1 bytes
30/05 20:03:27 130: read 1 bytes
30/05 20:03:27 131: read 1 bytes
30/05 20:03:27 132: read 1 bytes
30/05 20:03:27 133: exec measureOD(2) = 200
30/05 20:03:27 134: adding 1 neighbors...
30/05 20:03:27 135: executing: normOD = 1 + od - threshold / threshold
30/05 20:03:27 138: adding 1 neighbors...
30/05 20:03:27 145: execute: normOD > 1
30/05 20:03:27 146: adding 2 neighbors...
30/05 20:03:27 149: execute: normOD < 1
30/05 20:03:27 150: adding 2 neighbors...
30/05 20:03:27 151: executing: prop = 1 - normOD - 1
30/05 20:03:27 152: adding 1 neighbors...
30/05 20:03:27 154: execute: fabs(prop - 1) > epsilon
30/05 20:03:27 156: adding 2 neighbors...
30/05 20:03:27 164: executing: rate = prop * rate
30/05 20:03:27 165: adding 1 neighbors...
30/05 20:03:27 167: exec setContinousFlow(1, 2, 40.9954)
30/05 20:03:27 168: getting variable var3 from the main_namespace...
30/05 20:03:27 171: send  8 bytes
30/05 20:03:27 181: waiting for data for 0 ms
30/05 20:03:27 283: waiting for data for 100 ms
30/05 20:03:27 385: waiting for data for 200 ms
30/05 20:03:27 487: waiting for data for 300 ms
30/05 20:03:27 590: waiting for data for 400 ms
30/05 20:03:27 693: waiting for data for 500 ms
30/05 20:03:27 795: waiting for data for 600 ms
30/05 20:03:27 897: waiting for data for 700 ms
30/05 20:03:28 001: waiting for data for 800 ms
30/05 20:03:28 103: waiting for data for 900 ms
30/05 20:03:28 205: waiting for data for 1000 ms
30/05 20:03:28 308: read 1 bytes
30/05 20:03:28 309: read 1 bytes
30/05 20:03:28 310: read 1 bytes
30/05 20:03:28 311: read 1 bytes
30/05 20:03:28 312: read 1 bytes
30/05 20:03:28 313: read 1 bytes
30/05 20:03:28 314: read 1 bytes
30/05 20:03:28 315: read 1 bytes
30/05 20:03:28 366: getting variable var0 from the main_namespace...
30/05 20:03:28 369: send  8 bytes
30/05 20:03:28 419: waiting for data for 0 ms
30/05 20:03:28 522: waiting for data for 100 ms
30/05 20:03:28 625: waiting for data for 200 ms
30/05 20:03:28 727: waiting for data for 300 ms
30/05 20:03:28 830: waiting for data for 400 ms
30/05 20:03:28 932: waiting for data for 500 ms
30/05 20:03:29 034: waiting for data for 600 ms
30/05 20:03:29 136: waiting for data for 700 ms
30/05 20:03:29 240: waiting for data for 800 ms
30/05 20:03:29 342: waiting for data for 900 ms
30/05 20:03:29 444: read 1 bytes
30/05 20:03:29 445: read 1 bytes
30/05 20:03:29 446: read 1 bytes
30/05 20:03:29 447: read 1 bytes
30/05 20:03:29 448: read 1 bytes
30/05 20:03:29 449: read 1 bytes
30/05 20:03:29 450: read 1 bytes
30/05 20:03:29 451: read 1 bytes
30/05 20:03:29 504: getting variable var5 from the main_namespace...
30/05 20:03:29 507: adding 1 neighbors...
30/05 20:03:29 508: exec setContinousFlow(2, 3, 40.9954)
30/05 20:03:29 510: getting variable var2 from the main_namespace...
30/05 20:03:29 513: send  8 bytes
30/05 20:03:29 565: waiting for data for 0 ms
30/05 20:03:29 667: waiting for data for 100 ms
30/05 20:03:29 770: waiting for data for 200 ms
30/05 20:03:29 872: waiting for data for 300 ms
30/05 20:03:29 974: waiting for data for 400 ms
30/05 20:03:30 077: waiting for data for 500 ms
30/05 20:03:30 179: waiting for data for 600 ms
30/05 20:03:30 281: waiting for data for 700 ms
30/05 20:03:30 390: waiting for data for 800 ms
30/05 20:03:30 496: waiting for data for 900 ms
30/05 20:03:30 603: read 1 bytes
30/05 20:03:30 608: read 1 bytes
30/05 20:03:30 613: read 1 bytes
30/05 20:03:30 617: read 1 bytes
30/05 20:03:30 622: read 1 bytes
30/05 20:03:30 627: read 1 bytes
30/05 20:03:30 630: read 1 bytes
30/05 20:03:30 634: read 1 bytes
30/05 20:03:30 687: getting variable var5 from the main_namespace...
30/05 20:03:30 693: adding 1 neighbors...
30/05 20:03:30 696: executing timeStept: passed 4680 ms
30/05 20:03:30 749: time variable: 23443
30/05 20:03:30 752: adding 1 neighbors...
30/05 20:03:30 755: executing loop: actualTime < 20000
30/05 20:03:30 757: adding 1 neighbors...
30/05 20:03:30 765: finalizing environment...
